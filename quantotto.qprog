{
    "outputs": {
        "qasm": "// Generated by Classiq.\n// Classiq version: 0.79.1\n// Creation timestamp: 2025-05-17T19:23:24.944021+00:00\n// Random seed: 1840046290\n\nOPENQASM 3.0;\ninclude \"stdgates.inc\";\ninput float[64] feature_param_0;\ninput float[64] feature_param_1;\ninput float[64] feature_param_10;\ninput float[64] feature_param_11;\ninput float[64] feature_param_12;\ninput float[64] feature_param_13;\ninput float[64] feature_param_14;\ninput float[64] feature_param_15;\ninput float[64] feature_param_2;\ninput float[64] feature_param_3;\ninput float[64] feature_param_4;\ninput float[64] feature_param_5;\ninput float[64] feature_param_6;\ninput float[64] feature_param_7;\ninput float[64] feature_param_8;\ninput float[64] feature_param_9;\ninput float[64] weights_param_0;\ninput float[64] weights_param_1;\ninput float[64] weights_param_10;\ninput float[64] weights_param_11;\ninput float[64] weights_param_12;\ninput float[64] weights_param_13;\ninput float[64] weights_param_14;\ninput float[64] weights_param_2;\ninput float[64] weights_param_3;\ninput float[64] weights_param_4;\ninput float[64] weights_param_5;\ninput float[64] weights_param_6;\ninput float[64] weights_param_7;\ninput float[64] weights_param_8;\ninput float[64] weights_param_9;\ngate encoding__encode_on_bloch(feature_param_0, feature_param_1, feature_param_10, feature_param_11, feature_param_12, feature_param_13, feature_param_14, feature_param_15, feature_param_2, feature_param_3, feature_param_4, feature_param_5, feature_param_6, feature_param_7, feature_param_8, feature_param_9) _gate_q_0, _gate_q_1, _gate_q_2, _gate_q_3, _gate_q_4, _gate_q_5, _gate_q_6, _gate_q_7 {\n  rx(pi*feature_param_14) _gate_q_7;\n  rz(pi*feature_param_15) _gate_q_7;\n  rx(pi*feature_param_12) _gate_q_6;\n  rz(pi*feature_param_13) _gate_q_6;\n  rx(pi*feature_param_10) _gate_q_5;\n  rz(pi*feature_param_11) _gate_q_5;\n  rx(pi*feature_param_8) _gate_q_4;\n  rz(pi*feature_param_9) _gate_q_4;\n  rx(pi*feature_param_6) _gate_q_3;\n  rz(pi*feature_param_7) _gate_q_3;\n  rx(pi*feature_param_4) _gate_q_2;\n  rz(pi*feature_param_5) _gate_q_2;\n  rx(pi*feature_param_0) _gate_q_0;\n  rz(pi*feature_param_1) _gate_q_0;\n  rx(pi*feature_param_2) _gate_q_1;\n  rz(pi*feature_param_3) _gate_q_1;\n}\ngate main__encoding(feature_param_0, feature_param_1, feature_param_10, feature_param_11, feature_param_12, feature_param_13, feature_param_14, feature_param_15, feature_param_2, feature_param_3, feature_param_4, feature_param_5, feature_param_6, feature_param_7, feature_param_8, feature_param_9) _gate_q_0, _gate_q_1, _gate_q_2, _gate_q_3, _gate_q_4, _gate_q_5, _gate_q_6, _gate_q_7 {\n  encoding__encode_on_bloch(feature_param_0, feature_param_1, feature_param_2, feature_param_3, feature_param_4, feature_param_5, feature_param_6, feature_param_7, feature_param_8, feature_param_9, feature_param_10, feature_param_11, feature_param_12, feature_param_13, feature_param_14, feature_param_15) _gate_q_0, _gate_q_1, _gate_q_2, _gate_q_3, _gate_q_4, _gate_q_5, _gate_q_6, _gate_q_7;\n}\ngate rzz(p0) _gate_q_0, _gate_q_1 {\n  cx _gate_q_0, _gate_q_1;\n  rz(p0) _gate_q_1;\n  cx _gate_q_0, _gate_q_1;\n}\ngate main__ansatz(weights_param_0, weights_param_1, weights_param_10, weights_param_11, weights_param_12, weights_param_13, weights_param_14, weights_param_2, weights_param_3, weights_param_4, weights_param_5, weights_param_6, weights_param_7, weights_param_8, weights_param_9) _gate_q_0, _gate_q_1, _gate_q_2, _gate_q_3, _gate_q_4, _gate_q_5, _gate_q_6, _gate_q_7 {\n  ry(weights_param_7) _gate_q_7;\n  ry(weights_param_6) _gate_q_6;\n  ry(weights_param_5) _gate_q_5;\n  ry(weights_param_4) _gate_q_4;\n  ry(weights_param_3) _gate_q_3;\n  ry(weights_param_2) _gate_q_2;\n  ry(weights_param_0) _gate_q_0;\n  ry(weights_param_1) _gate_q_1;\n  rzz(weights_param_8) _gate_q_0, _gate_q_1;\n  rzz(weights_param_9) _gate_q_1, _gate_q_2;\n  rzz(weights_param_10) _gate_q_2, _gate_q_3;\n  rzz(weights_param_11) _gate_q_3, _gate_q_4;\n  rzz(weights_param_12) _gate_q_4, _gate_q_5;\n  rzz(weights_param_13) _gate_q_5, _gate_q_6;\n  rzz(weights_param_14) _gate_q_6, _gate_q_7;\n}\nqubit[8] q;\nmain__encoding(feature_param_0, feature_param_1, feature_param_2, feature_param_3, feature_param_4, feature_param_5, feature_param_6, feature_param_7, feature_param_8, feature_param_9, feature_param_10, feature_param_11, feature_param_12, feature_param_13, feature_param_14, feature_param_15) q[0], q[1], q[2], q[3], q[4], q[5], q[6], q[7];\nmain__ansatz(weights_param_0, weights_param_1, weights_param_2, weights_param_3, weights_param_4, weights_param_5, weights_param_6, weights_param_7, weights_param_8, weights_param_9, weights_param_10, weights_param_11, weights_param_12, weights_param_13, weights_param_14) q[0], q[1], q[2], q[3], q[4], q[5], q[6], q[7];\n"
    },
    "qasm_version": "3.0",
    "version": "0.79.1",
    "interface_version": "11",
    "hardware_data": {
        "basis_gates": [
            "y",
            "u2",
            "cz",
            "ry",
            "r",
            "cy",
            "sx",
            "id",
            "cx",
            "u",
            "rz",
            "x",
            "sdg",
            "rx",
            "h",
            "s",
            "p",
            "u1",
            "tdg",
            "z",
            "sxdg",
            "t"
        ],
        "connectivity_map": null,
        "is_symmetric_connectivity": true,
        "backend_data": null
    },
    "initial_values": null,
    "data": {
        "width": 8,
        "circuit_parameters": [
            "feature_param_0",
            "feature_param_1",
            "feature_param_10",
            "feature_param_11",
            "feature_param_12",
            "feature_param_13",
            "feature_param_14",
            "feature_param_15",
            "feature_param_2",
            "feature_param_3",
            "feature_param_4",
            "feature_param_5",
            "feature_param_6",
            "feature_param_7",
            "feature_param_8",
            "feature_param_9",
            "weights_param_0",
            "weights_param_1",
            "weights_param_10",
            "weights_param_11",
            "weights_param_12",
            "weights_param_13",
            "weights_param_14",
            "weights_param_2",
            "weights_param_3",
            "weights_param_4",
            "weights_param_5",
            "weights_param_6",
            "weights_param_7",
            "weights_param_8",
            "weights_param_9"
        ],
        "qubit_mapping": {
            "logical_inputs": {},
            "logical_outputs": {
                "result": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                ]
            },
            "physical_inputs": {},
            "physical_outputs": {
                "result": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                ]
            }
        },
        "execution_data": null
    },
    "model": {
        "version": "0.79.1",
        "interface_version": "11",
        "enums": [],
        "types": [],
        "qstructs": [],
        "constants": [],
        "classical_execution_code": "dummy",
        "execution_preferences": {
            "noise_properties": null,
            "random_seed": 3052341759,
            "backend_preferences": {
                "backend_service_provider": "Classiq",
                "backend_name": "simulator"
            },
            "num_shots": 1024,
            "transpile_to_hardware": "decompose",
            "job_name": null
        },
        "circuit_outputs": {
            "result": {
                "size": 8,
                "is_signed": false,
                "fraction_places": 0,
                "bypass_bounds_validation": false,
                "bounds": [
                    0.0,
                    255.0
                ]
            }
        },
        "circuit_output_types": {
            "result": {
                "quantum_types": {
                    "source_ref": null,
                    "back_ref": null,
                    "element_type": {
                        "source_ref": null,
                        "back_ref": null,
                        "kind": "qbit"
                    },
                    "kind": "qvec",
                    "length": {
                        "source_ref": null,
                        "back_ref": null,
                        "expr": "8"
                    }
                },
                "size": 8
            }
        },
        "register_filter_bitstrings": {}
    },
    "transpiled_circuit": {
        "outputs": {
            "qasm": "// Generated by Classiq.\n// Classiq version: 0.79.1\n// Creation timestamp: 2025-05-17T19:23:25.043901+00:00\n// Random seed: 1840046290\n\nOPENQASM 3.0;\ninclude \"stdgates.inc\";\ninput float[64] feature_param_0;\ninput float[64] feature_param_1;\ninput float[64] feature_param_10;\ninput float[64] feature_param_11;\ninput float[64] feature_param_12;\ninput float[64] feature_param_13;\ninput float[64] feature_param_14;\ninput float[64] feature_param_15;\ninput float[64] feature_param_2;\ninput float[64] feature_param_3;\ninput float[64] feature_param_4;\ninput float[64] feature_param_5;\ninput float[64] feature_param_6;\ninput float[64] feature_param_7;\ninput float[64] feature_param_8;\ninput float[64] feature_param_9;\ninput float[64] weights_param_0;\ninput float[64] weights_param_1;\ninput float[64] weights_param_10;\ninput float[64] weights_param_11;\ninput float[64] weights_param_12;\ninput float[64] weights_param_13;\ninput float[64] weights_param_14;\ninput float[64] weights_param_2;\ninput float[64] weights_param_3;\ninput float[64] weights_param_4;\ninput float[64] weights_param_5;\ninput float[64] weights_param_6;\ninput float[64] weights_param_7;\ninput float[64] weights_param_8;\ninput float[64] weights_param_9;\nqubit[8] q;\nrx(pi*feature_param_0) q[0];\nrz(pi*feature_param_1) q[0];\nry(weights_param_0) q[0];\nrx(pi*feature_param_2) q[1];\nrz(pi*feature_param_3) q[1];\nry(weights_param_1) q[1];\ncx q[0], q[1];\nrz(weights_param_8) q[1];\ncx q[0], q[1];\nrx(pi*feature_param_4) q[2];\nrz(pi*feature_param_5) q[2];\nry(weights_param_2) q[2];\ncx q[1], q[2];\nrz(weights_param_9) q[2];\ncx q[1], q[2];\nrx(pi*feature_param_6) q[3];\nrz(pi*feature_param_7) q[3];\nry(weights_param_3) q[3];\ncx q[2], q[3];\nrz(weights_param_10) q[3];\ncx q[2], q[3];\nrx(pi*feature_param_8) q[4];\nrz(pi*feature_param_9) q[4];\nry(weights_param_4) q[4];\ncx q[3], q[4];\nrz(weights_param_11) q[4];\ncx q[3], q[4];\nrx(pi*feature_param_10) q[5];\nrz(pi*feature_param_11) q[5];\nry(weights_param_5) q[5];\ncx q[4], q[5];\nrz(weights_param_12) q[5];\ncx q[4], q[5];\nrx(pi*feature_param_12) q[6];\nrz(pi*feature_param_13) q[6];\nry(weights_param_6) q[6];\ncx q[5], q[6];\nrz(weights_param_13) q[6];\ncx q[5], q[6];\nrx(pi*feature_param_14) q[7];\nrz(pi*feature_param_15) q[7];\nry(weights_param_7) q[7];\ncx q[6], q[7];\nrz(weights_param_14) q[7];\ncx q[6], q[7];\n"
        },
        "qasm_version": "3.0",
        "depth": 24,
        "count_ops": {
            "rz": 15,
            "cx": 14,
            "rx": 8,
            "ry": 8
        },
        "logical_to_physical_input_qubit_map": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
        ],
        "logical_to_physical_output_qubit_map": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
        ]
    },
    "creation_time": "2025-05-17T19:23:25.210649",
    "synthesis_duration": {
        "preprocessing": 0.21549612400121987,
        "solving": 0.12199227802921087,
        "conversion_to_circuit": 0.028070576954632998,
        "postprocessing": 0.28545335796661675
    },
    "debug_info": null,
    "compressed_debug_info": "KLUv/WAQyvVmAIrcoCAlAFNU6PxvWHniFwfBIIkkOIB+FJz9LwiFJLspka1iRPX///+HFV0C1QHsAduktEqRM2g0ylnSodlP7ZVEizSzrdrIY+hGLe3pUVFdIm/PpiszMzP9Sx1XeZV63JLuHpnhS9x+wwjhPhxr7N6WzCnTbilNXW7G2NDi7VinmhStEyf7c+Tnjwae1kmPoKT6m2kfQTJ+TYfo0R58Gsc4BmZhBM/GTA+xw6dldRp7ThoN65FnZdZwGR7GskSOOJHyI7s3lJysarRRuxKHWjMNQ5iY8WiPkUpxvx9kIcFLEfJonKXQn3fKsUdfPumQ8ruFDQ1NwAEL5ETEYowGDGhAFxB4gIGHM+FvFt4wRDzgrg0lu75NawiTIh+RUwoVYjVulT+NHNX6QYfsZPhHvW9IOd3sk2UcydVjSwsd1xKacuTdT3wlv2QvPkIAJcACwPAlogMGiSJ+Sr8pGUuqz8TcR4f/CU17ajEMExMNFnyQwAGEAA2toMBBREe4w0M8SHyEhqBfMEgoKDhDg8NjgAFDQ1FQuGDiYbF4WDj0BAYKChl8AQoKEAzDMYpBFxSF3ZeIiQeJY0Fp58AXXqL/A4i+YMG8hERDLDwsFhYRDxAZvERDn44g0b4gwfAN3gwRnYHEQj1EfAeFoQFig1cgwMAAtcDBgmHh8CaBdgwoKA8NvuDwsPAfYRoYKCgfSDREcOg1ioaGCQcICRQsIN58sJhoeJDwnkAVqUDFKUxBFENRnwHDohs+YkHiN3jjwLCwYPAJDBYTEIuJB4mPYNAg4hcSDBE+IkExgQQQEiQWEgsNDxELh4eSoEiI4MBgHorDJ0BI+AvaIcEDCAkODwyL4jBxFswvOuIdPkKCBxIE9t6Yn3TOccLzR87mSe2au16fubeYpE90Gme9KFXVpv028fWSI8+a+rupMo9GFUOKWXVFxxhjjK8yzPE204OyneTRkWTSI3XsScbRwkrMaHosTnvj6JBVemvzkbXev3/KzVAyP015dlSuTWWkkcMxympbr+0pVP5NpvxoWw01fzP2VVVV9WlCShXRFI0tTOpKlOmkoeFTCJoizuMai64YJ1NUlYw9xP8+x6yxLFlID2HK4qPjgdSvNUzzXxnSd6QgeSFOdXtUJIsU24xzRQghxHD+72+hSl6686MzU0LtY46POYaLeSbHkFKzSU8PJ13mZx00VuYg82GyZHWarpwcg/i4+kpLWye2L+FCeZ7pYDkaeUxm7qyym5mZjbOTScweM2k1E8lypFmemg0xQsqXT/3Imzcp69IaHhkvRlfcxphi7uO4/cl7GgSZip2j8nl0pZT9fHSXJ2fbnzCZdZG6+jiXv7u7M5jdeA5RZ0o/S5rkKMco1OR6dCH3eo6PY8/SdjqV0SMzXMXiYzKV1bCcKTJzmhr/qLOPCBr+Y/3ipwwtTqUU01s5UieFzG4pRETEg/w5tN1w0flkUh5Hlpa0SpqwtjPpsidMrolUYcLdo2Y1wlGcR+Q5jsoTqewxLjFEO7yHeb3p4Gn6gUf150iJpXJxoliG9t2lGNVopjPmaPEMStLmW1q7R7CweFJ/ORFTjhC14DE0aaYPscN+2EludGmbHI3Chu78lIcxbIbLmK+HnpnJjDraXKMnT8oZeD8G27KzutOXZyrPJU9cyZvkuHVv1Oh0QufcqfKOauig2kMOjsRTp/5K3zcT0Wbi4kcnz5IX97IflqVtjGEf05N0OuSjzS2yO6ZOpW8vyS6NW6h4m8aRI1SzhE7G/1hu9PLlSpBKnem+HJHhTnrJZ/TQsDS5lJNMbIxTDz3KM0M7fI1NqwghzXV3R+PXqdgeGUQk069Vhu2AgAFFB4uWcGgtLm5seRQlLoeJTR414tEpOzxzSF0P69+vJvdasrWjHH+o8RDEYx757Ncb3SiTOLXh0e5RIqbPvlaPM6ykKehL18/0Vkej9KBipB97yxYNE4VL8adZgk4GTdMXPyrjnUYSYiRxoMFFHcbtqZ4smbJHNjip9u58mVpYMA690Obd5KBpO/nWkvcfOSlGrPuGjMzm5CY33ZrPLBqcg02LmqbWMSooFCFkoeEdIt4CDiAYFBQgLvgGFBQaujwooKDQiy4AAmKAtuAriHgJBwiwoTi+nLkePmGNJsZzZBiLrkpxm+rZDFc9zPPLeSYjhunXHBUdhRSXGK6XdK4tPLAYMafTwDt6okd6jkE+PWfr1LbXUEq1JjtSTaX8HjbMdXS0VbkjTrI0Bh8V5CJydm88Bw+C4xBzr8jUcRpVZWi02ZFndI5i8JRWJL1rUvMj0q90+q3axkJIVWSe65Jxw/AraeLCR1126OSwNeMyjcX43lfIzXFa66NqTlpTpbOIQsBUICJpTHwvSozSdol1j2540kHfY6/ofchwO7WiU+Lkb0e/72R8CcmRCeFQcVeQqDFmR/SQmzKt4hFzNpEzzCu7Ubti3YaNkpbhZN5HjZjUXg5BwgjBTmFWXYixL4bniRRcMqWDn9ZWBzofdGIUiSk+1TCnWrUzqFju5pqDQExBCOE3tqJ3a4hHWRref4qsyNE1/TaliIYYH4TFmf70kaYOas9TzAyDMIhijHKpu1pp3shwM+35I64yCL9UUSf+P4zRwXmMkNWp2pMKMW0nLQ0pTscxmGkTnQrrUeczYQ8vjaecbl9KgkxoeNTLhKrTGMIgQxGBY5+Deo57UeJxyuujfkLIVKPZ4yx8TpUut0fVzGRuHNmWQo+EtB4dWwrW8cU3S8NMyypTEjdkVeM/eBh9VVMzOSK8hYrnsWO2ULeOFjOEzh6CQaiys8gZYgwhhBhDRIRExB3CSwIEwzDrnCvJA4I5BkEgBEEQggRBCBCEQggQggRBEIIEQcgCQgSIYGNOHRkHzoCpk6EJrh0YKnfbH12Y146w7RHxCKBSTkyh/fh3bPaszG3wHs3bYFUepn6hrjR/8x9u+/LYO6iy3iAfvd55gClAsxHXv3nStm+8d7d9OPMHVdc75OP5M4dRsakvPymmN/sRWCCSycNVxzv04/cxx6jY1Jc3Kd6b/QgsEIlJg6rrHfLx650Do5iIa9+caa/K3qiXYYFIJg1VXe/Qj7enHJLiK69/U0mbv/kPbfl4zBtUXe+Qj1/vfKD0i6CYnLotUcRrjJyrCZHONHwtXz9w96jhi1Of2AqO6gbhjx32fptQlXY6tgKeDq3VNI1Vwb7OP2TrMEJqFDXYiB6HM6fE8XFE0f1dNQeTNjaSh/ZbyxozGglf7K7rZnHO2tD8OBSauxwGAdpy0XIatbk4Dx0VThtDR6YRod/bRs5dqB2i5PADVODcbGN7HprkWDrmKg+q4DBsY28eykFdOGaza2oD5sbSr9QOfc8UMhPZwMLksC9SdkwyJ+e2ddk54vo3OGheKdzShnzEn96YIsb7Cn+nwpj4PRwlZU+mgtN7Cm28zbwgsOjYB1kHDTFvbWBbAM+T+bOv0h3dxXiYKZpj4Ua+aZmZIJDyKczoosgYtUfHPXSlCcCbzBw14phtGkwvFE52BDMa7esOQ5xbYqZZPVpLcZiiInMYMWlpWG4bbNZroSA6eMhj3t5IedSJ6M/w8V1WYYA1o01KN2bKkJgmRMdpsunFLADCOJRuygkxLIxBBZD6Tawbq+KI/TMHZlMVi3kI41C65EBAxFW3YZrqVdocZhPWG6tW4ABjPY8gNmk1BAMJIyi4oRU5OJkoKoAN49ImjnF2GuxrnXPlRDctWDxPHI3TXUeE40NzzJvOZaxazcYndlXF9Ow6Eczx2sTLrMTCeJTdKhGE66bvOfvXJkQbq8arNmigqidsugzZYriJxmB/wngU3BIRhq9JGw2TSXVj1Sowgth/UZEabPowa7gwDqWbRaJGxGyr79hXGNKxOHdjBu8HCR/lDw7cgaqpOgncLXGMtJfjnDt2U6HutTGFpEq/PdM/MjtIZgnK3Glvcd6q6fTHHzj8BmSh9Q6cuTEMQothmSYd7xHqeGn4eFonKFaD9H1qSINmve5YUpFxUbmNUVGJGnWEDVNARkFplyJIEaIWmOp8d7SfkK19qcN8flLaY1Ih07vUWdyuyDxeYUnBB2ZB2S1aUWJSoPErQmaiALmVgxidm287nt1LraADBZeR8FC1PDpjpScxTKTLN+gpDA1CGPQ/twdMSwTgRq7nnN+AtqOTQST2mAxI0JPKCUbAgU/cZyBFVNbjYjbvjED/BZE/hfLOIn6KOhl7DFqHkTShkXBVRJR647ROgAvQ4RgPU8SSWE1OZm7LLG5yXXULOKmoN/wsK9nHuSltEh2UQ7QNRWQYTP4KSy7MdOQQa/ipkvZHI53VjPK2tJEZxTf0QWvhic+4PLASljIwK2Dqa0YZAhgS4A6CtZOo58gWOlGd8oIbLjeUkF3CQSnjCorurQ==",
    "program_id": "da179354-ea51-4f66-8dbd-62308e447b3a",
    "execution_primitives_input": null
}